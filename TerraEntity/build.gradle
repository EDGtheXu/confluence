plugins {
    id 'net.neoforged.moddev'
}

neoForge {
    version = neo_version
    validateAccessTransformers = true
    runs {
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        moment{
            sourceSet sourceSets.main
        }
    }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [minecraft_version      : minecraft_version,
                             minecraft_version_range: minecraft_version_range,
                             neo_version            : neo_version,
                             neo_version_range      : neo_version_range,
                             loader_version_range   : loader_version_range,
                             mod_id                 : mod_id,
                             mod_name               : mod_name,
                             mod_license            : mod_license,
                             mod_version            : mod_version,
                             mod_authors            : mod_authors,
                             mod_description        : mod_description]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}